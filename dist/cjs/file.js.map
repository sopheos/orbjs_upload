{"version":3,"file":"file.js","names":["_axios","_interopRequireDefault","require","_rxjs","_operators","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","FileUpload","exports","options","_classCallCheck2","Subject","_options$maxSize","maxSize","_options$name","name","_createClass2","key","value","getFileSize","fileSize","getTimeUpload","timeUpload","onProgress","progress","asObservable","pipe","onError","error","onComplete","complete","onSuccess","success","upload","file","data","undefined","reset","isFileValid","buildFormData","reupload","execRequest","lastFormData","_this","started","setTimeout","next","cancelRequest","size","formData","FormData","append","item","Blob","fileName","isFileTypeValid","_this2","allowedTypes","some","allowedType","type","isFileSizeValid","_this3","_execRequest","_asyncToGenerator2","_regenerator","mark","_callee","_this4","CancelToken","headers","axiosConfig","start","wrap","_context","prev","axios","sent","method","url","withCredentials","Expires","concat","Date","toUTCString","Pragma","cancelToken","canceler","onUploadProgress","loaded","_progress$total","total","initialProgress","now","request","then","catch","isCancel","stop","_x"],"sources":["../../src/file.ts"],"sourcesContent":["import axios, { Canceler, AxiosRequestConfig } from 'axios';\nimport { Subject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface metadata { \n  name: string, \n  value: string | Blob, \n  fileName?: string \n}\n\n/**\n * FileUpload Options\n */\nexport interface FileUploadOptions {\n  /**\n   * Allowed types to upload. Format types MIME. If not set, all type allowed.\n   */\n  allowedTypes?: Array<string>;\n\n  /**\n   * Callback to build headers to send with the request\n   */\n  headers?: Function;\n\n  /**\n   * Max File Size\n   * @default 20971520\n   */\n  maxSize?: number;\n\n  /**\n   * File name\n   * @default 'file'\n   */\n  name?: string;\n\n  /**\n   * Destination url\n   */\n  url: string;\n}\n\n/**\n * Class upload file, to send a file to a server with an axios request\n * Documentation : Le live\n */\nexport class FileUpload {\n  protected fileSize: number | null = null;\n  protected timeUpload: number | null = null;\n  protected progress = new Subject<number>();\n  protected complete = new Subject<boolean>();\n  protected success = new Subject<any>();\n  protected error = new Subject<any>();\n  protected options: FileUploadOptions;\n  protected cancelRequest!: Canceler;\n  protected started: boolean = false;\n  protected initialProgress: number = 0;\n  protected lastFormData!: FormData;\n\n  /**\n   * @param {FileUploadOptions} options\n   */\n  constructor(options: FileUploadOptions) {\n    const {\n      maxSize = 20971520,\n      name = 'file',\n    } = options;\n\n    this.options = { maxSize, name, ...options };\n  }\n\n  /**\n   * @returns {number | null}\n   */\n  public getFileSize(): number | null {\n    return this.fileSize;\n  }\n  /**\n   * @returns {number | null}\n   */\n  public getTimeUpload(): number | null {\n    return this.timeUpload;\n  }\n  /**\n   * Observable request progress\n   * @returns {Observable<number>}\n   */\n  public onProgress(): Observable<number> {\n    return this.progress.asObservable().pipe(filter(value => value !== null));\n  }\n\n  /**\n   * Observable error\n   * @returns {Observable<any>}\n   */\n  public onError(): Observable<any> {\n    return this.error.asObservable().pipe(filter(value => value !== null));\n  }\n\n  /**\n   * Request completed\n   * @returns {Observable<boolean>}\n   */\n  public onComplete(): Observable<boolean> {\n    return this.complete.asObservable().pipe(filter(value => value !== null));\n  }\n\n  /**\n   * Request Succeeded\n   * @returns {Observable<any>}\n   */\n  public onSuccess(): Observable<any> {\n    return this.success.asObservable().pipe(filter(value => value !== null));\n  }\n\n  /**\n   * Check if file is valid & call buildFormData()\n   * @param {File} file\n   * @param {Array<{Â name: string, value: string | Blob, fileName?: string }>} data default empty array\n   */\n  public upload(file: File, data: Array<{ name: string, value: string | Blob, fileName?: string }> = []): void {\n    this.reset();\n\n    if (!this.isFileValid(file)) {\n      return;\n    }\n\n    this.buildFormData(file, data);\n  }\n\n  /**\n   * Retry to upload last FormData\n   */\n  public reupload(): void {\n    this.execRequest(this.lastFormData);\n  }\n\n  /**\n   * Reset FileUpload\n   */\n  protected reset(): void {\n    this.started = false;\n    setTimeout(() => this.progress.next(0));\n\n    // Cancel request si cancelable\n    if (this.cancelRequest) {\n      this.cancelRequest();\n    }\n  }\n\n  /**\n   * Build FormData & call execRequest()\n   * @param {File} file\n   * @param {metadata} data default empty array\n   */\n  protected buildFormData(file: File, data: Array<metadata> = []): void {\n    this.fileSize = file.size;\n    const formData = new FormData();\n    formData.append(this.options.name!, file, file.name);\n    if (data) {\n      data.forEach((item) => {\n        if (item.value instanceof Blob) {\n          formData.append(item.name, item.value, item.fileName);\n        } else {\n          formData.append(item.name, item.value);\n        }\n      })\n    }\n    this.execRequest(formData);\n  }\n\n  /**\n   * Determines if file type is valid\n   * @param {File} file\n   * @returns {boolean} true if file type valid, false otherwise\n   */\n  protected isFileTypeValid(file: File): boolean {\n    if (\n      this.options.allowedTypes!.length > 0\n      && !this.options.allowedTypes!.some(allowedType => allowedType === file.type)\n    ) {\n      setTimeout(() => this.error.next('invalid_filetype'));\n      setTimeout(() => this.complete.next(true));\n      this.reset();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Determines if file size is valid\n   * @param {File} file\n   * @returns {boolean} true if file size valid, false otherwise\n   */\n  protected isFileSizeValid(file: File): boolean {\n    if (this.options.maxSize! && file.size > this.options.maxSize!) {\n      setTimeout(() => this.error.next('invalid_filesize'));\n      setTimeout(() => this.complete.next(true));\n      this.reset();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Determines if file is valid\n   * @param {File} file\n   * @returns {boolean} true if file is valid, false otherwise\n   */\n  protected isFileValid(file: File): boolean {\n    return this.isFileTypeValid(file) && this.isFileSizeValid(file);\n  }\n\n  /**\n   * Prepare & send request to provided url\n   * @param {FormData} formData\n   */\n  private async execRequest(formData: FormData): Promise<void> {\n    this.lastFormData = formData;\n    this.started = true;\n    const { CancelToken } = axios;\n\n    let headers = {};\n    if (this.options.headers) {\n      headers = await this.options.headers()\n    }\n\n    const axiosConfig: AxiosRequestConfig = {\n      method: 'POST',\n      url: this.options.url,\n      data: formData,\n      withCredentials: true,\n      headers: {\n        ...headers,\n        Expires: 'Mon, 26 Jul 1990 05:00:00 GMT',\n        'Last-Modified': `${new Date().toUTCString()} GMT`,\n        'Cache-Control': 'no-store, no-cache, must-revalidate, post-check=0, pre-check=0',\n        Pragma: 'no-cache'\n      },\n      cancelToken: new CancelToken(canceler => {\n        this.cancelRequest = canceler;\n      }),\n      onUploadProgress: progress => {\n        const { loaded, total = 1 } = progress;\n        return setTimeout(() => this.progress.next(this.initialProgress + (loaded / total ) * (100 - this.initialProgress)));\n      }\n        \n    };\n\n    const start = Date.now();\n    // Send upload request\n    axios.request(axiosConfig).then((success) => {\n      this.timeUpload = Date.now() - start;\n      setTimeout(() => this.success.next(success.data));\n\n      this.started = false;\n      setTimeout(() => this.complete.next(true));\n    }).catch((error) => {\n      this.reset();\n      if (!axios.isCancel(error))\n        setTimeout(() => this.error.next(error));\n\n      this.started = false;\n      setTimeout(() => this.complete.next(true));\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}